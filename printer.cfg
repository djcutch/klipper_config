# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position				[gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Fine tune E steps					[extruder] section

[mcu]
##	[X in MOTOR0] - B Motor
##	[Y in MOTOR1] - A Motor
##	[E in MOTOR6] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_2F0025001950534841313020-if00
#restart_method: command
#serial: /dev/ttyAMA0
#restart_method: command
##--------------------------------------------------------------------

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    175,175,1  # an example

[input_shaper]
#shaper_type_x = zv
#shaper_freq_x = 59.8
#shaper_type_y = mzv
#shaper_freq_y = 38.6




[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000     			#Max 4000
max_accel_to_decel: 3000
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on MOTOR0(B Motor)
[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 64
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 75   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 1.4
sense_resistor: 0.110
stealthchop_threshold: 0

## Y Stepper on MOTOR1 (A Motor)
[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 64
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
##--------------------------------------------------------------------

##	Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
position_endstop: 350
position_max: 350


##--------------------------------------------------------------------
homing_speed: 75  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 1.4
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR2_1
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 6:1
microsteps: 32
endstop_pin: PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_max: 240

##	Uncomment below for 300mm build
#position_max: 290

##	Uncomment below for 350mm build
position_max: 330

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


##	Z1 Stepper - Rear Left on MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 6:1
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 6:1
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right on MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 6:1
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Extruder
#####################################################################

#	E0 on MOTOR6
[extruder]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
##	Update Gear Ratio depending on your Extruder Type
#    Afterburner/Clockwork
#rotation_distance: 22.20658612
#gear_ratio: 50:17
#    Gallileo
#rotation_distance: 35.57725394
#gear_ratio: 7.5:1
# LGX Lite
#rotation_distance = 5.643
rotation_distance = 5.7
#rotation_distance = 5.55578531
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
##	Validate the following thermistor type to make sure it is correct
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF4
min_temp: -273
max_temp: 270
max_power: 1.0
min_extrude_temp: 20
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##	Try to keep pressure_advance below 1.0
## PLA
#pressure_advance: 0.05435
max_extrude_only_distance: 100
##	Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.035


##	E0 on MOTOR6
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.65
sense_resistor: 0.110
stealthchop_threshold: 0
sense_resistor: 0.11

#####################################################################
# 	Bed Heater
#####################################################################


[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PA1
sensor_type: Generic 3950
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.65
min_temp: -100
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769
pwm_cycle_time: 0.0166


#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling
##	If your probe is NO instead of NC, add change pin to !PB7
#pin: PG11
#x_offset: 0
#y_offset: 25.0
#z_offset: 0
#speed: 10.0
#samples: 3
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.006
#samples_tolerance_retries: 3

[probe]
##  Inductive Probe / Klicky(Mag) Probe
##  This probe is not used for Z height 
pin: PG11
z_offset = 6.42
x_offset: 0
y_offset: 19.75
speed: 3
lift_speed: 10
samples: 3
samples_result: median
sample_retract_dist: 1.5
samples_tolerance: 0.0075
samples_tolerance_retries: 10

#####################################################################
# 	Fan Control
#####################################################################

[fan]
##	Print Cooling Fan - CNC_FAN0
pin: PA8
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##	Hotend Fan - CNC_FAN1
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
fan_speed: .8

[heater_fan controller_fan]
##	Controller fan - Z board, HE1 Connector
pin: PD12
kick_start_time: 0.5
fan_speed: 0.75
max_power: 1.0
heater: heater_bed
heater_temp: 45.0

[heater_fan chamber_fan]
##	Controller fan - Z board, HE1 Connector
pin: PD13
kick_start_time: 0.5
fan_speed: 1.0
max_power: 1.0
heater: heater_bed
heater_temp: 100.0

[thermistor chamber_temp]
temperature1: 25
resistance1: 10000
beta: 3950


[temperature_sensor chamber]
gcode_id: C
sensor_type: chamber_temp
sensor_pin: PF5
min_temp: 0
max_temp: 100


#[temperature_fan chamber]
##    Nevermore fan - Z board, HE1 Connector
#pin: PD13
#sensor_type: Custom_NTC100K_B3950
#sensor_pin: PF5
#kick_start_time: 0.5
#control: pid
#pid_kp: 5
#pid_ki: 3
#pid_kd: 100
#min_temp: 0
#max_temp: 100
#target_temp: 55.0
#off_below: .1
#min_speed: 0.0
#max_speed: 1
#shutdown_speed: 1

#[heater_fan raspberry_fan]
##
#pin: PD15
#kick_start_time: 0.5
#fan_speed: 1.0
#max_power: 1.0
#heater: heater_bed
#heater_temp: 20.0


[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[thermistor 100k3950_airtemp]
temperature1: 20
resistance1: 125245
temperature2: 50
resistance2: 35900
temperature3: 80
resistance3: 12933


#####################################################################
# 	LED Control
#####################################################################

[output_pin caselight]
# Chamber Lighting - HE1 Connector (Optional)
pin: PA3
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

#[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
#home_xy_position: 238.00,350
#speed:100
#z_hop:10

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
##	Gantry Corners for 250mm Build
##	Uncomment for 250mm build
#gantry_corners:
#	-60,-10
#	310, 320
##	Probe points
#points:
#	50,25
#	50,175
#	200,175
#	200,25
	
##	Gantry Corners for 300mm Build
##	Uncomment for 300mm build
#gantry_corners:
#	-60,-10
#	360,370
##	Probe points
#points:
#	50,25
#	50,225
#	250,225
#	250,25

##	Gantry Corners for 350mm Build
##	Uncomment for 350mm build
gantry_corners:
	-60,-10
	410,420
##	Probe points
points:
	50,25
	50,275
	300,275
	300,25

#--------------------------------------------------------------------
speed: 300
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10


#####################################################################
#   Bed Mesh Settings
#####################################################################

[bed_mesh]
speed: 200
horizontal_move_z: 15
probe_count: 5,5
fade_start: 1
fade_end: 10
fade_target: 0
split_delta_z: .01
move_check_distance: 3
mesh_pps: 2,2
#algorithm: bicubic
algorithm: lagrange
relative_reference_index: 12
mesh_min: 30,30
mesh_max: 320,320

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>


#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

#[display]
##	mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##	To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=3 

#--------------------------------------------------------------------

#####################################################################
# 	Vars
#####################################################################

[pause_resume]

[display_status]

[virtual_sdcard]
path: ~/gcode_files

[exclude_object]

#[endstop_phase]

#####################################################################
#       BTT SMART FILAMENT SENSOR
#####################################################################


[filament_motion_sensor filament_sensor]
detection_length: 7.00
extruder: extruder
switch_pin: PG12
pause_on_runout: True
event_delay: 3.0
pause_delay: 0.5
runout_gcode: PAUSE



#####################################################################
# 	Macros
#####################################################################

## Bed Mesh by bed temp
[gcode_macro MESH_STORE]
gcode:
  G32
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE SAVE=Voron-Bed_Temp-{printer.heater_bed.target|int}C
  BED_MESH_PROFILE REMOVE=default
  # Move to Middle
  G90                    ; set absolute
  G0 Z7.5 F900           ; lift nozzle
  G0 X175 Y175 Z30 F7200 ; move to middle
  SAVE_CONFIG
  
[gcode_macro MESH_LOAD]
gcode:
  {% set bed_temp = printer.heater_bed.target|int %}
  {% if printer.configfile.config["bed_mesh Voron-Bed_Temp-" + bed_temp|string + "C"] is defined %}
    BED_MESH_CLEAR
    BED_MESH_PROFILE LOAD=Voron-Bed_Temp-{printer.heater_bed.target|int}C
    _PRINT_AR T="{"MESH: Voron-Bed_Temp-" + bed_temp|string + "C loaded"}"
  {% else %}
    _PRINT_AR T="{"MESH ERROR: Voron-Bed_Temp-" + bed_temp|string + "C not defined"}"
  {% endif %}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro BED_MESH_CALIBRATE]
gcode:
    #before the original gcode
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL
    G1 X175 Y175 Z30 F6000
    #the original gcode
    BED_MESH_CALIBRATE
    #after the original gcode


#[gcode_macro RUN_BELTS]
#default_parameter_CYCLES: 30                
#gcode:
#        G1 X10 Y10 Z100 F5000
#        {% for pass in range(CYCLES|int) %}
#             G1 X10 Y290 F40000
#             G1 X290 Y290 F40000
#             G1 X290 Y5 F40000
#             G1 X10 Y5 F40000
#        {% endfor %}

[gcode_macro G32]
gcode:
      BED_MESH_CLEAR
      G28
      QUAD_GANTRY_LEVEL
      G28
      G0 X150 Y150 Z20 F6000

#[gcode_macro M141]
#gcode:
#    {% set chambertemp = params.CHAMBER_TEMP|default(20)|int %}
#    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={chambertemp}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 3
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
; enable preference index
variable_enable_reference_index : False
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
        {% else %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% endif %}

	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            {% set algorithm = "lagrange" %}
            {% if "algorithm" in bedMeshConfig and meshPointX >=4 and meshPointY >=4 %}
                {% set algorithm = bedMeshConfig.algorithm %}
            {% endif %}

            {% if enable_reference_index %}
                {% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm} relative_reference_index={referenceIndex}
            {% else %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
            {% endif %}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}



[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
#default_parameter_BED_TEMP: 115
#default_parameter_EXTRUDER_TEMP: 245
# gcode parameters for area bed mesh
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
gcode:
  # Parameters
    {% set bed_temp = params.BED|default(60)|int %}
    {% set extruder_temp = params.EXTRUDER_LAYER|default(210)|int %}
    {% if bed_temp > 100|int %}
      {% set chambertemp = params.CHAMBER_TEMP|default(60)|int %}
    {% else %}
      {% set chambertemp = params.CHAMBER_TEMP|default(30)|int %}
    {% endif %}
    
    M117 Heating...
    G28
    G90
    G0 X175 Y175 Z175 F2000
    M106 S255
    M117 set bed final temp {bed_temp}   
    M140 S{bed_temp}                         ; set bed final temp
    M117 Waiting for bed final temp {bed_temp}  
    M190 S{bed_temp}                         ; wait for bed final temp
    {% if bed_temp > 100|int %}
      M104 S200
    {% else %}
      M104 S170
    {% endif %}  
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={(chambertemp|float * 0.9)|round}
    M106 S0
    M104 S0
    M117 QUAD_GANTRY_LEVEL
    G32
    M117 set extruder final temp to 80% {extruder_temp} 
    M104 S{extruder_temp|int * 0.80}                        ; set extruder temp 80% of final temp
    M117 wait for extruder final temp to reach 80%  {extruder_temp} 
    M109 S{extruder_temp|int * 0.80}           ; get the nozzle up to 80% temp so the cleaning brush can knock off debris
    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M83 ; use relative distances for extrusion
    #{% if bed_temp > 100|int %}
    #M117 Heat Soak
    #M106 S255
    #HEAT_SOAK
    #{% endif %}
    M106 S0
    M117 QUAD_GANTRY_LEVEL After Heat Soak
    G32
    #M117 Loading Voron-Bed_Temp-{bed_temp}C
    #BED_MESH_PROFILE LOAD=Voron-Bed_Temp-{bed_temp}C
    M117 CLEAN_NOZZLE
    CLEAN_NOZZLE
    G0 X175 F1000
    M117 Auto Z
    CALIBRATE_Z
    BED_MESH_CALIBRATE AREA_START={params.AREA_START|default("0,0")} AREA_END={params.AREA_END|default("0,0")}
    M117 CLEAN_NOZZLE
    M117
    M109 S{extruder_temp}
    M117 CLEAN_NOZZLE
    CLEAN_NOZZLE
    G0 X175 F1000
    {% if bed_temp > 100|int %}
      SET_PRESSURE_ADVANCE ADVANCE=.0555
      SET_GCODE_OFFSET Z_ADJUST={params.Z_ADJUST|default(0.13)|float} MOVE=1
    {% else %} 
      SET_PRESSURE_ADVANCE ADVANCE=.0555
      SET_GCODE_OFFSET Z_ADJUST={params.Z_ADJUST|default(0.14)|float} MOVE=1
    {% endif %}
    PURGE_LINE
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1




[gcode_macro PURGE_LINE]
gcode:
    G0 X115 Y5 Z0.3 F9000         ; Move to start position
    G92 E0                        ; Reset Extruder
    G1 E10 F600                   ; Extrude a little
    G1 X10 E20 F1000              ; Draw line
    G92 E0                        ; Reset Extruder
    G91                           ; relative positioning
    G0 X50 F18000                 ; Wipe line 1
    G0 X-40 F18000                ; Wipe line 2
    G0 Z10 F1000                  ; Raise nozzle
    G90      

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-20.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z20 F3000                    ; move nozzle up 20mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR

# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# For use with Marlin's linear advance calibration: https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	SET_PRESSURE_ADVANCE ADVANCE={pa}

[gcode_macro TEST_SPEED]
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding box (in case the machine min/maxes are not perfect)
	{% set bound = params.BOUND|default(20)|int %}
	
	# Set speed test bounds (machine minimum/maximum positions, inset by the bounding box)
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	# Absolute positioning
	G90
	
	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}	
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
		G4 P1000 
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}

	{% for i in range(iterations) %}
		# Diagonals
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_max} Y{y_max} F{speed * 60}
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
		G0 X{x_min} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
		
		# Box
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_min} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

	# Re-home XY and get position again for comparison:
		G28 X Y
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
		G4 P1000 
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(10) %}
    G91
    G1 E50 F{speed}
    G1 E50 F{speed}
    G92

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(10) %}
    G91
    G1 E-50 F{speed}
    G1 E-50 F{speed}
    G92

[gcode_macro HEAT_SOAK]
gcode:
     SET_IDLE_TIMEOUT TIMEOUT=5400 ; Idle timeout 1.5 hours
     G4 P3600000 ; Wait one hour

[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}

[delayed_gcode DISABLEFILAMENTSENSOR]	
initial_duration: 1
gcode:
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

[include /home/pi/klipper_config/nozzle_scrub.cfg]
[include /home/pi/klipper_config/klicky-probe.cfg]


## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = -0.040
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 45.061
#*# pid_ki = 1.642
#*# pid_kd = 309.229
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 35.719
#*# pid_ki = 2.312
#*# pid_kd = 137.966
#*#
#*# [bed_mesh Voron-Bed_Temp-60C]
#*# version = 1
#*# points =
#*# 	-0.002604, 0.025521, 0.020833, 0.009375, -0.002604
#*# 	-0.029167, 0.000000, -0.005208, -0.013021, -0.028646
#*# 	-0.025521, 0.002083, 0.000000, -0.011979, -0.027083
#*# 	-0.006250, 0.025521, 0.015625, 0.016146, -0.003125
#*# 	0.041667, 0.068750, 0.064583, 0.062500, 0.020312
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 5
#*# max_y = 320.0
#*# mesh_x_pps = 2
#*# max_x = 320.0
#*#
#*# [bed_mesh Voron-Bed_Temp-110C]
#*# version = 1
#*# points =
#*# 	  -0.014583, 0.011458, 0.009375, 0.021875, 0.019792, 0.007292, -0.008333
#*# 	  -0.021875, 0.012500, -0.003125, 0.000000, 0.001042, -0.018750, -0.035417
#*# 	  -0.016667, 0.019792, -0.005208, -0.007292, -0.001042, -0.022917, -0.051042
#*# 	  -0.017708, 0.016667, -0.005208, 0.000000, -0.005208, -0.016667, -0.040625
#*# 	  -0.022917, 0.012500, -0.003125, -0.001042, -0.005208, -0.017708, -0.042708
#*# 	  -0.000000, 0.033333, 0.010417, 0.010417, 0.017708, -0.001042, -0.019792
#*# 	  0.010417, 0.048958, 0.020833, 0.030208, 0.033333, 0.007292, -0.012500
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 7
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [bed_mesh Voron-Bed_Temp-0C]
#*# version = 1
#*# points =
#*# 	-0.012500, 0.021875, 0.026042, 0.006250, -0.006250
#*# 	-0.025000, -0.005208, -0.009375, -0.009375, -0.031250
#*# 	-0.020833, 0.004167, 0.000000, -0.013542, -0.028125
#*# 	-0.013542, 0.007292, -0.000000, -0.008333, -0.027083
#*# 	-0.004167, 0.010417, 0.010417, 0.010417, -0.019792
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [endstop_phase stepper_z]
#*# trigger_phase = 136/256
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 64.4
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 51.6
